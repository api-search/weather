openapi: 3.1.0
info:
  title: greengrassv2
paths:
  /greengrass/servicerole:
    GET:
      summary: GetServiceRoleForAccount
      description: >-
        <p>Gets the service role associated with IoT Greengrass for your Amazon
        Web Services account in this Amazon Web Services Region. IoT Greengrass
        uses this role to verify the identity of client devices and manage core
        device connectivity information. For more information, see <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-service-role.html">Greengrass
        service role</a> in the <i>IoT Greengrass Version 2 Developer
        Guide</i>.</p>
      tags:
        - Get
        - Services
        - Roles
        - For
        - Account
        - Green Grass
        - Service Roles
  /greengrass/v2/coreDevices/{coreDeviceThingName}/associateClientDevices:
    POST:
      summary: BatchAssociateClientDeviceWithCoreDevice
      description: >-
        <p>Associates a list of client devices with a core device. Use this API
        operation to specify which client devices can discover a core device
        through cloud discovery. With cloud discovery, client devices connect to
        IoT Greengrass to retrieve associated core devices' connectivity
        information and certificates. For more information, see <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/configure-cloud-discovery.html">Configure
        cloud discovery</a> in the <i>IoT Greengrass V2 Developer Guide</i>.</p>
        <note> <p>Client devices are local IoT devices that connect to and
        communicate with an IoT Greengrass core device over MQTT. You can
        connect client devices to a core device to sync MQTT messages and data
        to Amazon Web Services IoT Core and interact with client devices in
        Greengrass components. For more information, see <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/interact-with-local-iot-devices.html">Interact
        with local IoT devices</a> in the <i>IoT Greengrass V2 Developer
        Guide</i>.</p> </note>
      tags:
        - Batches
        - Associate
        - Client
        - Device
        - null
        - Core
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
  /greengrass/v2/coreDevices/{coreDeviceThingName}/disassociateClientDevices:
    POST:
      summary: BatchDisassociateClientDeviceFromCoreDevice
      description: >-
        <p>Disassociates a list of client devices from a core device. After you
        disassociate a client device from a core device, the client device won't
        be able to use cloud discovery to retrieve the core device's
        connectivity information and certificates.</p>
      tags:
        - Batches
        - Disassociate
        - Client
        - Device
        - From
        - Core
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
  /greengrass/v2/deployments/{deploymentId}/cancel:
    POST:
      summary: CancelDeployment
      description: >-
        <p>Cancels a deployment. This operation cancels the deployment for
        devices that haven't yet received it. If a device already received the
        deployment, this operation doesn't change anything for that device.</p>
      tags:
        - Cancel
        - Deployments
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
  /greengrass/v2/createComponentVersion:
    POST:
      summary: CreateComponentVersion
      description: >-
        <p>Creates a component. Components are software that run on Greengrass
        core devices. After you develop and test a component on your core
        device, you can use this operation to upload your component to IoT
        Greengrass. Then, you can deploy the component to other core
        devices.</p> <p>You can use this operation to do the following:</p> <ul>
        <li> <p> <b>Create components from recipes</b> </p> <p>Create a
        component from a recipe, which is a file that defines the component's
        metadata, parameters, dependencies, lifecycle, artifacts, and platform
        capability. For more information, see <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html">IoT
        Greengrass component recipe reference</a> in the <i>IoT Greengrass V2
        Developer Guide</i>.</p> <p>To create a component from a recipe, specify
        <code>inlineRecipe</code> when you call this operation.</p> </li> <li>
        <p> <b>Create components from Lambda functions</b> </p> <p>Create a
        component from an Lambda function that runs on IoT Greengrass. This
        creates a recipe and artifacts from the Lambda function's deployment
        package. You can use this operation to migrate Lambda functions from IoT
        Greengrass V1 to IoT Greengrass V2.</p> <p>This function only accepts
        Lambda functions that use the following runtimes:</p> <ul> <li>
        <p>Python 2.7 – <code>python2.7</code> </p> </li> <li> <p>Python 3.7 –
        <code>python3.7</code> </p> </li> <li> <p>Python 3.8 –
        <code>python3.8</code> </p> </li> <li> <p>Python 3.9 –
        <code>python3.9</code> </p> </li> <li> <p>Java 8 – <code>java8</code>
        </p> </li> <li> <p>Java 11 – <code>java11</code> </p> </li> <li>
        <p>Node.js 10 – <code>nodejs10.x</code> </p> </li> <li> <p>Node.js 12 –
        <code>nodejs12.x</code> </p> </li> <li> <p>Node.js 14 –
        <code>nodejs14.x</code> </p> </li> </ul> <p>To create a component from a
        Lambda function, specify <code>lambdaFunction</code> when you call this
        operation.</p> <note> <p>IoT Greengrass currently supports Lambda
        functions on only Linux core devices.</p> </note> </li> </ul>
      tags:
        - Create
        - Components
        - Versions
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
  /greengrass/v2/deployments:
    GET:
      summary: ListDeployments
      description: <p>Retrieves a paginated list of deployments.</p>
      tags:
        - Lists
        - Deployments
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
  /greengrass/v2/components/{arn}:
    GET:
      summary: GetComponent
      description: <p>Gets the recipe for a version of a component.</p>
      tags:
        - Get
        - Components
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
  /greengrass/v2/coreDevices/{coreDeviceThingName}:
    GET:
      summary: GetCoreDevice
      description: >-
        <p>Retrieves metadata for a Greengrass core device.</p> <note> <p>IoT
        Greengrass relies on individual devices to send status updates to the
        Amazon Web Services Cloud. If the IoT Greengrass Core software isn't
        running on the device, or if device isn't connected to the Amazon Web
        Services Cloud, then the reported status of that device might not
        reflect its current status. The status timestamp indicates when the
        device status was last updated.</p> <p>Core devices send status updates
        at the following times:</p> <ul> <li> <p>When the IoT Greengrass Core
        software starts</p> </li> <li> <p>When the core device receives a
        deployment from the Amazon Web Services Cloud</p> </li> <li> <p>When the
        status of any component on the core device becomes <code>BROKEN</code>
        </p> </li> <li> <p>At a <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html#greengrass-nucleus-component-configuration-fss">regular
        interval that you can configure</a>, which defaults to 24 hours</p>
        </li> <li> <p>For IoT Greengrass Core v2.7.0, the core device sends
        status updates upon local deployment and cloud deployment</p> </li>
        </ul> </note>
      tags:
        - Get
        - Core
        - Device
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
  /greengrass/v2/deployments/{deploymentId}:
    GET:
      summary: GetDeployment
      description: >-
        <p>Gets a deployment. Deployments define the components that run on
        Greengrass core devices.</p>
      tags:
        - Get
        - Deployments
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
  /greengrass/v2/components/{arn}/metadata:
    GET:
      summary: DescribeComponent
      description: <p>Retrieves metadata for a version of a component.</p>
      tags:
        - Describe
        - Components
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
  /greengrass/v2/components/{arn}/artifacts/{artifactName+}:
    GET:
      summary: GetComponentVersionArtifact
      description: >-
        <p>Gets the pre-signed URL to download a public or a Lambda component
        artifact. Core devices call this operation to identify the URL that they
        can use to download an artifact to install.</p>
      tags:
        - Get
        - Components
        - Versions
        - Artifacts
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
  /greengrass/things/{thingName}/connectivityInfo:
    PUT:
      summary: UpdateConnectivityInfo
      description: >-
        <p>Updates connectivity information for a Greengrass core device.</p>
        <p>Connectivity information includes endpoints and ports where client
        devices can connect to an MQTT broker on the core device. When a client
        device calls the <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-discover-api.html">IoT
        Greengrass discovery API</a>, IoT Greengrass returns connectivity
        information for all of the core devices where the client device can
        connect. For more information, see <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/connect-client-devices.html">Connect
        client devices to core devices</a> in the <i>IoT Greengrass Version 2
        Developer Guide</i>.</p>
      tags:
        - Update
        - Connectivity
        - Info
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
  /greengrass/v2/coreDevices/{coreDeviceThingName}/associatedClientDevices:
    GET:
      summary: ListClientDevicesAssociatedWithCoreDevice
      description: >-
        <p>Retrieves a paginated list of client devices that are associated with
        a core device.</p>
      tags:
        - Lists
        - Client
        - Devices
        - Associated
        - null
        - Core
        - Device
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
  /greengrass/v2/components/{arn}/versions:
    GET:
      summary: ListComponentVersions
      description: >-
        <p>Retrieves a paginated list of all versions for a component. Greater
        versions are listed first.</p>
      tags:
        - Lists
        - Components
        - Versions
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
  /greengrass/v2/components:
    GET:
      summary: ListComponents
      description: >-
        <p>Retrieves a paginated list of component summaries. This list includes
        components that you have permission to view.</p>
      tags:
        - Lists
        - Components
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
  /greengrass/v2/coreDevices:
    GET:
      summary: ListCoreDevices
      description: >-
        <p>Retrieves a paginated list of Greengrass core devices.</p> <note>
        <p>IoT Greengrass relies on individual devices to send status updates to
        the Amazon Web Services Cloud. If the IoT Greengrass Core software isn't
        running on the device, or if device isn't connected to the Amazon Web
        Services Cloud, then the reported status of that device might not
        reflect its current status. The status timestamp indicates when the
        device status was last updated.</p> <p>Core devices send status updates
        at the following times:</p> <ul> <li> <p>When the IoT Greengrass Core
        software starts</p> </li> <li> <p>When the core device receives a
        deployment from the Amazon Web Services Cloud</p> </li> <li> <p>When the
        status of any component on the core device becomes <code>BROKEN</code>
        </p> </li> <li> <p>At a <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html#greengrass-nucleus-component-configuration-fss">regular
        interval that you can configure</a>, which defaults to 24 hours</p>
        </li> <li> <p>For IoT Greengrass Core v2.7.0, the core device sends
        status updates upon local deployment and cloud deployment</p> </li>
        </ul> </note>
      tags:
        - Lists
        - Core
        - Devices
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
  /greengrass/v2/coreDevices/{coreDeviceThingName}/effectiveDeployments:
    GET:
      summary: ListEffectiveDeployments
      description: >-
        <p>Retrieves a paginated list of deployment jobs that IoT Greengrass
        sends to Greengrass core devices.</p>
      tags:
        - Lists
        - Effective
        - Deployments
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
        - Effective
  /greengrass/v2/coreDevices/{coreDeviceThingName}/installedComponents:
    GET:
      summary: ListInstalledComponents
      description: >-
        <p>Retrieves a paginated list of the components that a Greengrass core
        device runs. By default, this list doesn't include components that are
        deployed as dependencies of other components. To include dependencies in
        the response, set the <code>topologyFilter</code> parameter to
        <code>ALL</code>.</p> <note> <p>IoT Greengrass relies on individual
        devices to send status updates to the Amazon Web Services Cloud. If the
        IoT Greengrass Core software isn't running on the device, or if device
        isn't connected to the Amazon Web Services Cloud, then the reported
        status of that device might not reflect its current status. The status
        timestamp indicates when the device status was last updated.</p> <p>Core
        devices send status updates at the following times:</p> <ul> <li>
        <p>When the IoT Greengrass Core software starts</p> </li> <li> <p>When
        the core device receives a deployment from the Amazon Web Services
        Cloud</p> </li> <li> <p>When the status of any component on the core
        device becomes <code>BROKEN</code> </p> </li> <li> <p>At a <a
        href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html#greengrass-nucleus-component-configuration-fss">regular
        interval that you can configure</a>, which defaults to 24 hours</p>
        </li> <li> <p>For IoT Greengrass Core v2.7.0, the core device sends
        status updates upon local deployment and cloud deployment</p> </li>
        </ul> </note>
      tags:
        - Lists
        - Installed
        - Components
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
        - Effective
        - Installed
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: <p>Removes a tag from an IoT Greengrass resource.</p>
      tags:
        - Untag
        - Resources
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
        - Effective
        - Installed
  /greengrass/v2/resolveComponentCandidates:
    POST:
      summary: ResolveComponentCandidates
      description: >-
        <p>Retrieves a list of components that meet the component, version, and
        platform requirements of a deployment. Greengrass core devices call this
        operation when they receive a deployment to identify the components to
        install.</p> <p>This operation identifies components that meet all
        dependency requirements for a deployment. If the requirements conflict,
        then this operation returns an error and the deployment fails. For
        example, this occurs if component <code>A</code> requires version
        <code>&gt;2.0.0</code> and component <code>B</code> requires version
        <code>&lt;2.0.0</code> of a component dependency.</p> <p>When you
        specify the component candidates to resolve, IoT Greengrass compares
        each component's digest from the core device with the component's digest
        in the Amazon Web Services Cloud. If the digests don't match, then IoT
        Greengrass specifies to use the version from the Amazon Web Services
        Cloud.</p> <important> <p>To use this operation, you must use the data
        plane API endpoint and authenticate with an IoT device certificate. For
        more information, see <a
        href="https://docs.aws.amazon.com/general/latest/gr/greengrass.html">IoT
        Greengrass endpoints and quotas</a>.</p> </
      tags:
        - Resolve
        - Components
        - Candidates
        - Green Grass
        - Service Roles
        - Devices
        - Core
        - Device
        - Things
        - Names
        - Associate
        - Client
        - Disassociate
        - Identifiers
        - Cancel
        - Components
        - Versions
        - V2
        - Deployments
        - Components
        - ARN
        - Metadata
        - Names
        - Connectivity
        - Info
        - Associated
        - Versions
        - Effective
        - Installed
        - Candidates
