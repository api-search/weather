openapi: 3.1.0
info:
  title: kinesisvideo
paths:
  /createSignalingChannel:
    POST:
      summary: CreateSignalingChannel
      description: >-
        <p>Creates a signaling channel. </p> <p>
        <code>CreateSignalingChannel</code> is an asynchronous operation.</p>
      tags:
        - Create
        - Signaling
        - Channels
        - Signaling
        - Channels
  /createStream:
    POST:
      summary: CreateStream
      description: >-
        <p>Creates a new Kinesis video stream. </p> <p>When you create a new
        stream, Kinesis Video Streams assigns it a version number. When you
        change the stream's metadata, Kinesis Video Streams updates the version.
        </p> <p> <code>CreateStream</code> is an asynchronous operation.</p>
        <p>For information about how the service works, see <a
        href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
        it Works</a>. </p> <p>You must have permissions for the
        <code>KinesisVideo:CreateStream</code> action.</p>
      tags:
        - Create
        - Stream
        - Signaling
        - Channels
        - Stream
  /deleteEdgeConfiguration:
    POST:
      summary: DeleteEdgeConfiguration
      description: >-
        <p>An asynchronous API that deletes a stream’s existing edge
        configuration, as well as the corresponding media from the Edge
        Agent.</p> <p>When you invoke this API, the sync status is set to
        <code>DELETING</code>. A deletion process starts, in which active edge
        jobs are stopped and all media is deleted from the edge device. The time
        to delete varies, depending on the total amount of stored media. If the
        deletion process fails, the sync status changes to
        <code>DELETE_FAILED</code>. You will need to re-try the deletion.</p>
        <p>When the deletion process has completed successfully, the edge
        configuration is no longer accessible.</p>
      tags:
        - Delete
        - Edge
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
  /deleteSignalingChannel:
    POST:
      summary: DeleteSignalingChannel
      description: >-
        <p>Deletes a specified signaling channel.
        <code>DeleteSignalingChannel</code> is an asynchronous operation. If you
        don't specify the channel's current version, the most recent version is
        deleted.</p>
      tags:
        - Delete
        - Signaling
        - Channels
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
  /deleteStream:
    POST:
      summary: DeleteStream
      description: >-
        <p>Deletes a Kinesis video stream and the data contained in the stream.
        </p> <p>This method marks the stream for deletion, and makes the data in
        the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you
        have the latest version of the stream before deleting it, you can
        specify the stream version. Kinesis Video Streams assigns a version to
        each stream. When you update a stream, Kinesis Video Streams assigns a
        new version number. To get the latest stream version, use the
        <code>DescribeStream</code> API. </p> <p>This operation requires
        permission for the <code>KinesisVideo:DeleteStream</code> action.</p>
      tags:
        - Delete
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
  /describeEdgeConfiguration:
    POST:
      summary: DescribeEdgeConfiguration
      description: >-
        <p>Describes a stream’s edge configuration that was set using the
        <code>StartEdgeConfigurationUpdate</code> API and the latest status of
        the edge agent's recorder and uploader jobs. Use this API to get the
        status of the configuration to determine if the configuration is in sync
        with the Edge Agent. Use this API to evaluate the health of the Edge
        Agent.</p>
      tags:
        - Describe
        - Edge
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
  /describeImageGenerationConfiguration:
    POST:
      summary: DescribeImageGenerationConfiguration
      description: >-
        <p>Gets the <code>ImageGenerationConfiguration</code> for a given
        Kinesis video stream.</p>
      tags:
        - Describe
        - Images
        - Generation
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
  /describeMappedResourceConfiguration:
    POST:
      summary: DescribeMappedResourceConfiguration
      description: >-
        <p>Returns the most current information about the stream. The
        <code>streamName</code> or <code>streamARN</code> should be provided in
        the input.</p>
      tags:
        - Describe
        - Mapped
        - Resources
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
  /describeMediaStorageConfiguration:
    POST:
      summary: DescribeMediaStorageConfiguration
      description: >-
        <p>Returns the most current information about the channel. Specify the
        <code>ChannelName</code> or <code>ChannelARN</code> in the input.</p>
      tags:
        - Describe
        - Media
        - Storage
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
  /describeNotificationConfiguration:
    POST:
      summary: DescribeNotificationConfiguration
      description: >-
        <p>Gets the <code>NotificationConfiguration</code> for a given Kinesis
        video stream.</p>
      tags:
        - Describe
        - Notifications
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
  /describeSignalingChannel:
    POST:
      summary: DescribeSignalingChannel
      description: >-
        <p>Returns the most current information about the signaling channel. You
        must specify either the name or the Amazon Resource Name (ARN) of the
        channel that you want to describe.</p>
      tags:
        - Describe
        - Signaling
        - Channels
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
  /describeStream:
    POST:
      summary: DescribeStream
      description: >-
        <p>Returns the most current information about the specified stream. You
        must specify either the <code>StreamName</code> or the
        <code>StreamARN</code>. </p>
      tags:
        - Describe
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
  /getDataEndpoint:
    POST:
      summary: GetDataEndpoint
      description: >-
        <p>Gets an endpoint for a specified stream for either reading or
        writing. Use this endpoint in your application to read from the
        specified stream (using the <code>GetMedia</code> or
        <code>GetMediaForFragmentList</code> operations) or write to it (using
        the <code>PutMedia</code> operation). </p> <note> <p>The returned
        endpoint does not have the API name appended. The client needs to add
        the API name to the returned endpoint.</p> </note> <p>In the request,
        specify the stream either by <code>StreamName</code> or
        <code>StreamARN</code>.</p>
      tags:
        - Get
        - Data
        - Endpoints
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
  /getSignalingChannelEndpoint:
    POST:
      summary: GetSignalingChannelEndpoint
      description: >-
        <p>Provides an endpoint for the specified signaling channel to send and
        receive messages. This API uses the
        <code>SingleMasterChannelEndpointConfiguration</code> input parameter,
        which consists of the <code>Protocols</code> and <code>Role</code>
        properties.</p> <p> <code>Protocols</code> is used to determine the
        communication mechanism. For example, if you specify <code>WSS</code> as
        the protocol, this API produces a secure websocket endpoint. If you
        specify <code>HTTPS</code> as the protocol, this API generates an HTTPS
        endpoint. </p> <p> <code>Role</code> determines the messaging
        permissions. A <code>MASTER</code> role results in this API generating
        an endpoint that a client can use to communicate with any of the viewers
        on the channel. A <code>VIEWER</code> role results in this API
        generating an endpoint that a client can use to communicate only with a
        <code>MASTER</code>. </p>
      tags:
        - Get
        - Signaling
        - Channels
        - Endpoints
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
  /listEdgeAgentConfigurations:
    POST:
      summary: ListEdgeAgentConfigurations
      description: >-
        <p>Returns an array of edge configurations associated with the specified
        Edge Agent.</p> <p>In the request, you must specify the Edge Agent
        <code>HubDeviceArn</code>.</p>
      tags:
        - Lists
        - Edge
        - Agent
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
  /listSignalingChannels:
    POST:
      summary: ListSignalingChannels
      description: >-
        <p>Returns an array of <code>ChannelInfo</code> objects. Each object
        describes a signaling channel. To retrieve only those channels that
        satisfy a specific condition, you can specify a
        <code>ChannelNameCondition</code>.</p>
      tags:
        - Lists
        - Signaling
        - Channels
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
  /listStreams:
    POST:
      summary: ListStreams
      description: >-
        <p>Returns an array of <code>StreamInfo</code> objects. Each object
        describes a stream. To retrieve only streams that satisfy a specific
        condition, you can specify a <code>StreamNameCondition</code>. </p>
      tags:
        - Lists
        - Streams
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
  /ListTagsForResource:
    POST:
      summary: ListTagsForResource
      description: >-
        <p>Returns a list of tags associated with the specified signaling
        channel.</p>
      tags:
        - Lists
        - Tags
        - For
        - Resources
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
  /listTagsForStream:
    POST:
      summary: ListTagsForStream
      description: >-
        <p>Returns a list of tags associated with the specified stream.</p>
        <p>In the request, you must specify either the <code>StreamName</code>
        or the <code>StreamARN</code>. </p>
      tags:
        - Lists
        - Tags
        - For
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
  /startEdgeConfigurationUpdate:
    POST:
      summary: StartEdgeConfigurationUpdate
      description: >-
        <p>An asynchronous API that updates a stream’s existing edge
        configuration. The Kinesis Video Stream will sync the stream’s edge
        configuration with the Edge Agent IoT Greengrass component that runs on
        an IoT Hub Device, setup at your premise. The time to sync can vary and
        depends on the connectivity of the Hub Device. The
        <code>SyncStatus</code> will be updated as the edge configuration is
        acknowledged, and synced with the Edge Agent. </p> <p>If this API is
        invoked for the first time, a new edge configuration will be created for
        the stream, and the sync status will be set to <code>SYNCING</code>. You
        will have to wait for the sync status to reach a terminal state such as:
        <code>IN_SYNC</code>, or <code>SYNC_FAILED</code>, before using this API
        again. If you invoke this API during the syncing process, a
        <code>ResourceInUseException</code> will be thrown. The connectivity of
        the stream’s edge configuration and the Edge Agent will be retried for
        15 minutes. After 15 minutes, the status will transition into the
        <code>SYNC_FAILED</code> state.</p> <p>To move an edge configuration
        from one device to another, use <a>DeleteEdgeConfiguration</a> to delete
        the current edge configuration. You can then invoke
        StartEdgeConfigurationUpdate with an updated Hub Device ARN.</p>
      tags:
        - Start
        - Edge
        - Configurations
        - Update
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
  /TagResource:
    POST:
      summary: TagResource
      description: >-
        <p>Adds one or more tags to a signaling channel. A <i>tag</i> is a
        key-value pair (the value is optional) that you can define and assign to
        Amazon Web Services resources. If you specify a tag that already exists,
        the tag value is replaced with the value that you specify in the
        request. For more information, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost
        Management User Guide</i>.</p>
      tags:
        - Tags
        - Resources
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
  /tagStream:
    POST:
      summary: TagStream
      description: >-
        <p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair
        (the value is optional) that you can define and assign to Amazon Web
        Services resources. If you specify a tag that already exists, the tag
        value is replaced with the value that you specify in the request. For
        more information, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost
        Management User Guide</i>. </p> <p>You must provide either the
        <code>StreamName</code> or the <code>StreamARN</code>.</p> <p>This
        operation requires permission for the
        <code>KinesisVideo:TagStream</code> action.</p> <p>A Kinesis video
        stream can support up to 50 tags.</p>
      tags:
        - Tags
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
  /UntagResource:
    POST:
      summary: UntagResource
      description: >-
        <p>Removes one or more tags from a signaling channel. In the request,
        specify only a tag key or keys; don't specify the value. If you specify
        a tag key that does not exist, it's ignored.</p>
      tags:
        - Untag
        - Resources
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
  /untagStream:
    POST:
      summary: UntagStream
      description: >-
        <p>Removes one or more tags from a stream. In the request, specify only
        a tag key or keys; don't specify the value. If you specify a tag key
        that does not exist, it's ignored.</p> <p>In the request, you must
        provide the <code>StreamName</code> or <code>StreamARN</code>.</p>
      tags:
        - Untag
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
  /updateDataRetention:
    POST:
      summary: UpdateDataRetention
      description: >-
        <p>Increases or decreases the stream's data retention period by the
        value that you specify. To indicate whether you want to increase or
        decrease the data retention period, specify the <code>Operation</code>
        parameter in the request body. In the request, you must specify either
        the <code>StreamName</code> or the <code>StreamARN</code>. </p> <p>This
        operation requires permission for the
        <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing
        the data retention period affects the data in the stream as follows:</p>
        <ul> <li> <p>If the data retention period is increased, existing data is
        retained for the new retention period. For example, if the data
        retention period is increased from one hour to seven hours, all existing
        data is retained for seven hours.</p> </li> <li> <p>If the data
        retention period is decreased, existing data is retained for the new
        retention period. For example, if the data retention period is decreased
        from seven hours to one hour, all existing data is retained for one
        hour, and any data older than one hour is deleted immediately.</p> </li>
        </ul>
      tags:
        - Update
        - Data
        - Retention
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
  /updateImageGenerationConfiguration:
    POST:
      summary: UpdateImageGenerationConfiguration
      description: >-
        <p>Updates the <code>StreamInfo</code> and
        <code>ImageProcessingConfiguration</code> fields.</p>
      tags:
        - Update
        - Images
        - Generation
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
  /updateMediaStorageConfiguration:
    POST:
      summary: UpdateMediaStorageConfiguration
      description: >-
        <p>Associates a <code>SignalingChannel</code> to a stream to store the
        media. There are two signaling modes that you can specify :</p> <ul>
        <li> <p>If <code>StorageStatus</code> is enabled, the data will be
        stored in the <code>StreamARN</code> provided. In order for WebRTC
        Ingestion to work, the stream must have data retention enabled.</p>
        </li> <li> <p>If <code>StorageStatus</code> is disabled, no data will be
        stored, and the <code>StreamARN</code> parameter will not be needed.
        </p> </li> </ul> <important> <p>If <code>StorageStatus</code> is
        enabled, direct peer-to-peer (master-viewer) connections no longer
        occur. Peers connect directly to the storage session. You must call the
        <code>JoinStorageSession</code> API to trigger an SDP offer send and
        establish a connection between a peer and the storage session. </p>
        </important>
      tags:
        - Update
        - Media
        - Storage
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
  /updateNotificationConfiguration:
    POST:
      summary: UpdateNotificationConfiguration
      description: <p>Updates the notification information for a stream.</p>
      tags:
        - Update
        - Notifications
        - Configurations
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
  /updateSignalingChannel:
    POST:
      summary: UpdateSignalingChannel
      description: >-
        <p>Updates the existing signaling channel. This is an asynchronous
        operation and takes time to complete. </p> <p>If the
        <code>MessageTtlSeconds</code> value is updated (either increased or
        reduced), it only applies to new messages sent via this channel after
        it's been updated. Existing messages are still expired as per the
        previous <code>MessageTtlSeconds</code> value.</p>
      tags:
        - Update
        - Signaling
        - Channels
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
  /updateStream:
    POST:
      summary: UpdateStream
      description: >-
        <p>Updates stream metadata, such as the device name and media type.</p>
        <p>You must provide the stream name or the Amazon Resource Name (ARN) of
        the stream.</p> <p>To make sure that you have the latest version of the
        stream before updating it, you can specify the stream version. Kinesis
        Video Streams assigns a version to each stream. When you update a
        stream, Kinesis Video Streams assigns a new version number. To get the
        latest stream version, use the <code>DescribeStream</code> API. </p> <p>
        <code>UpdateStream</code> is an asynchronous operation, and takes time
        to com
      tags:
        - Update
        - Stream
        - Signaling
        - Channels
        - Stream
        - Edge
        - Configurations
        - Images
        - Generation
        - Mapped
        - Resources
        - Media
        - Storage
        - Notifications
        - Data
        - Endpoints
        - Agent
        - Configurations
        - Channels
        - Streams
        - Lists
        - Tags
        - For
        - Update
        - Tags
        - Untag
        - Retention
