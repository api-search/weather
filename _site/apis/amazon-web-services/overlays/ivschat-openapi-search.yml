openapi: 3.1.0
info:
  title: ivschat
paths:
  /CreateChatToken:
    POST:
      summary: CreateChatToken
      description: >-
        <p>Creates an encrypted token that is used by a chat participant to
        establish an individual WebSocket chat connection to a room. When the
        token is used to connect to chat, the connection is valid for the
        session duration specified in the request. The token becomes invalid at
        the token-expiration timestamp included in the response.</p> <p>Use the
        <code>capabilities</code> field to permit an end user to send messages
        or moderate a room.</p> <p>The <code>attributes</code> field securely
        attaches structured data to the chat session; the data is included
        within each message sent by the end user and received by other
        participants in the room. Common use cases for attributes include
        passing end-user profile data like an icon, display name, colors,
        badges, and other display features.</p> <p>Encryption keys are owned by
        Amazon IVS Chat and never used directly by your application.</p>
      tags:
        - Create
        - Chat
        - Tokens
        - Create
        - Chat
        - Tokens
  /CreateLoggingConfiguration:
    POST:
      summary: CreateLoggingConfiguration
      description: >-
        <p>Creates a logging configuration that allows clients to store and
        record sent messages.</p>
      tags:
        - Create
        - Logging
        - Configurations
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
  /CreateRoom:
    POST:
      summary: CreateRoom
      description: <p>Creates a room that allows clients to connect and pass messages.</p>
      tags:
        - Create
        - Rooms
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
  /DeleteLoggingConfiguration:
    POST:
      summary: DeleteLoggingConfiguration
      description: <p>Deletes the specified logging configuration.</p>
      tags:
        - Delete
        - Logging
        - Configurations
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
  /DeleteMessage:
    POST:
      summary: DeleteMessage
      description: >-
        <p>Sends an event to a specific room which directs clients to delete a
        specific message; that is, unrender it from view and delete it from the
        client’s chat history. This event’s <code>EventName</code> is
        <code>aws:DELETE_MESSAGE</code>. This replicates the <a
        href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-deletemessage-publish.html">
        DeleteMessage</a> WebSocket operation in the Amazon IVS Chat Messaging
        API.</p>
      tags:
        - Delete
        - Messages
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
  /DeleteRoom:
    POST:
      summary: DeleteRoom
      description: <p>Deletes the specified room.</p>
      tags:
        - Delete
        - Rooms
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
  /DisconnectUser:
    POST:
      summary: DisconnectUser
      description: >-
        <p>Disconnects all connections using a specified user ID from a room.
        This replicates the <a
        href="https://docs.aws.amazon.com/ivs/latest/chatmsgapireference/actions-disconnectuser-publish.html">
        DisconnectUser</a> WebSocket operation in the Amazon IVS Chat Messaging
        API.</p>
      tags:
        - Disconnect
        - Users
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
  /GetLoggingConfiguration:
    POST:
      summary: GetLoggingConfiguration
      description: <p>Gets the specified logging configuration.</p>
      tags:
        - Get
        - Logging
        - Configurations
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
  /GetRoom:
    POST:
      summary: GetRoom
      description: <p>Gets the specified room.</p>
      tags:
        - Get
        - Rooms
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
  /ListLoggingConfigurations:
    POST:
      summary: ListLoggingConfigurations
      description: >-
        <p>Gets summary information about all your logging configurations in the
        AWS region where the API request is processed.</p>
      tags:
        - Lists
        - Logging
        - Configurations
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
  /ListRooms:
    POST:
      summary: ListRooms
      description: >-
        <p>Gets summary information about all your rooms in the AWS region where
        the API request is processed. Results are sorted in descending order of
        <code>updateTime</code>.</p>
      tags:
        - Lists
        - Rooms
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
        - Rooms
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: <p>Removes tags from the resource with the specified ARN.</p>
      tags:
        - Untag
        - Resources
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
        - Rooms
        - ARN
  /SendEvent:
    POST:
      summary: SendEvent
      description: >-
        <p>Sends an event to a room. Use this within your application’s business
        logic to send events to clients of a room; e.g., to notify clients to
        change the way the chat UI is rendered.</p>
      tags:
        - Send
        - Events
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
        - Rooms
        - ARN
        - Send
        - Events
  /UpdateLoggingConfiguration:
    POST:
      summary: UpdateLoggingConfiguration
      description: <p>Updates a specified logging configuration.</p>
      tags:
        - Update
        - Logging
        - Configurations
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
        - Rooms
        - ARN
        - Send
        - Events
        - Update
  /UpdateRoom:
    POST:
      summary: UpdateRoom
      description: <p>Updates a room’s configur
      tags:
        - Update
        - Rooms
        - Create
        - Chat
        - Tokens
        - Logging
        - Configurations
        - Rooms
        - Delete
        - Messages
        - Disconnect
        - Users
        - Get
        - Lists
        - Configurations
        - Rooms
        - ARN
        - Send
        - Events
        - Upda
