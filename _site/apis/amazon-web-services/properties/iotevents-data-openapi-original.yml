openapi: 3.1.0
info:
  title: iotevents-data
  description: >-
    <p>IoT Events monitors your equipment or device fleets for failures or
    changes in operation, and triggers actions when such events occur. You can
    use IoT Events Data API commands to send inputs to detectors, list
    detectors, and view or update a detector's status.</p> <p> For more
    information, see <a
    href="https://docs.aws.amazon.com/iotevents/latest/developerguide/what-is-iotevents.html">What
    is IoT Events?</a> in the <i>IoT Events Developer Guide</i>.</p>
paths:
  /alarms/acknowledge:
    POST:
      summary: BatchAcknowledgeAlarm
      description: >-
        <p>Acknowledges one or more alarms. The alarms change to the
        <code>ACKNOWLEDGED</code> state after you acknowledge them.</p>
  /detectors/delete:
    POST:
      summary: BatchDeleteDetector
      description: >-
        <p>Deletes one or more detectors that were created. When a detector is
        deleted, its state will be cleared and the detector will be removed from
        the list of detectors. The deleted detector will no longer appear if
        referenced in the <a
        href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_ListDetectors.html">ListDetectors</a>
        API call.</p>
  /alarms/disable:
    POST:
      summary: BatchDisableAlarm
      description: >-
        <p>Disables one or more alarms. The alarms change to the
        <code>DISABLED</code> state after you disable them.</p>
  /alarms/enable:
    POST:
      summary: BatchEnableAlarm
      description: >-
        <p>Enables one or more alarms. The alarms change to the
        <code>NORMAL</code> state after you enable them.</p>
  /inputs/messages:
    POST:
      summary: BatchPutMessage
      description: >-
        <p>Sends a set of messages to the IoT Events system. Each message
        payload is transformed into the input you specify
        (<code>"inputName"</code>) and ingested into any detectors that monitor
        that input. If multiple messages are sent, the order in which the
        messages are processed isn't guaranteed. To guarantee ordering, you must
        send messages one at a time and wait for a successful response.</p>
  /alarms/reset:
    POST:
      summary: BatchResetAlarm
      description: >-
        <p>Resets one or more alarms. The alarms return to the
        <code>NORMAL</code> state after you reset them.</p>
  /alarms/snooze:
    POST:
      summary: BatchSnoozeAlarm
      description: >-
        <p>Changes one or more alarms to the snooze mode. The alarms change to
        the <code>SNOOZE_DISABLED</code> state after you set them to the snooze
        mode.</p>
  /detectors:
    POST:
      summary: BatchUpdateDetector
      description: >-
        <p>Updates the state, variable values, and timer settings of one or more
        detectors (instances) of a specified detector model.</p>
  /alarms/{alarmModelName}/keyValues/:
    GET:
      summary: DescribeAlarm
      description: <p>Retrieves information about an alarm.</p>
  /detectors/{detectorModelName}/keyValues/:
    GET:
      summary: DescribeDetector
      description: <p>Returns information about the specified detector (instance).</p>
  /alarms/{alarmModelName}:
    GET:
      summary: ListAlarms
      description: >-
        <p>Lists one or more alarms. The operation returns only the metadata
        associated with each alarm.</p>
  /detectors/{detectorModelName}:
    GET:
      summary: ListDetectors
      description: <p>Lists detectors (the instances of a detector model).</p>
tags: []
