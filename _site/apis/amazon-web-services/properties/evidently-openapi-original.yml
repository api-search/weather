openapi: 3.1.0
info:
  title: evidently
  description: >-
    <p>You can use Amazon CloudWatch Evidently to safely validate new features
    by serving them to a specified percentage of your users while you roll out
    the feature. You can monitor the performance of the new feature to help you
    decide when to ramp up traffic to your users. This helps you reduce risk and
    identify unintended consequences before you fully launch the feature.</p>
    <p>You can also conduct A/B experiments to make feature design decisions
    based on evidence and data. An experiment can test as many as five
    variations at once. Evidently collects experiment data and analyzes it using
    statistical methods. It also provides clear recommendations about which
    variations perform better. You can test both user-facing features and
    backend features.</p>
paths:
  /projects/{project}/evaluations:
    POST:
      summary: BatchEvaluateFeature
      description: >-
        <p>This operation assigns feature variation to user sessions. For each
        user session, you pass in an <code>entityID</code> that represents the
        user. Evidently then checks the evaluation rules and assigns the
        variation.</p> <p>The first rules that are evaluated are the override
        rules. If the user's <code>entityID</code> matches an override rule, the
        user is served the variation specified by that rule.</p> <p>Next, if
        there is a launch of the feature, the user might be assigned to a
        variation in the launch. The chance of this depends on the percentage of
        users that are allocated to that launch. If the user is enrolled in the
        launch, the variation they are served depends on the allocation of the
        various feature variations used for the launch.</p> <p>If the user is
        not assigned to a launch, and there is an ongoing experiment for this
        feature, the user might be assigned to a variation in the experiment.
        The chance of this depends on the percentage of users that are allocated
        to that experiment. If the user is enrolled in the experiment, the
        variation they are served depends on the allocation of the various
        feature variations used for the experiment. </p> <p>If the user is not
        assigned to a launch or experiment, they are served the default
        variation.</p>
  /projects/{project}/experiments:
    GET:
      summary: ListExperiments
      description: >-
        <p>Returns configuration details about all the experiments in the
        specified project.</p>
  /projects/{project}/features:
    GET:
      summary: ListFeatures
      description: >-
        <p>Returns configuration details about all the features in the specified
        project.</p>
  /projects/{project}/launches:
    GET:
      summary: ListLaunches
      description: >-
        <p>Returns configuration details about all the launches in the specified
        project.</p>
  /projects:
    GET:
      summary: ListProjects
      description: >-
        <p>Returns configuration details about all the projects in the current
        Region in your account.</p>
  /segments:
    GET:
      summary: ListSegments
      description: >-
        <p>Returns a list of audience segments that you have created in your
        account in this Region.</p>
  /projects/{project}/experiments/{experiment}:
    PATCH:
      summary: UpdateExperiment
      description: >-
        <p>Updates an Evidently experiment. </p> <p>Don't use this operation to
        update an experiment's tag. Instead, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>.
        </p>
  /projects/{project}/features/{feature}:
    PATCH:
      summary: UpdateFeature
      description: >-
        <p>Updates an existing feature.</p> <p>You can't use this operation to
        update the tags of an existing feature. Instead, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>.
        </p>
  /projects/{project}/launches/{launch}:
    PATCH:
      summary: UpdateLaunch
      description: >-
        <p>Updates a launch of a given feature. </p> <p>Don't use this operation
        to update the tags of an existing launch. Instead, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>.
        </p>
  /projects/{project}:
    PATCH:
      summary: UpdateProject
      description: >-
        <p>Updates the description of an existing project.</p> <p>To create a
        new project, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateProject.html">CreateProject</a>.</p>
        <p>Don't use this operation to update the data storage options of a
        project. Instead, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProjectDataDelivery.html">UpdateProjectDataDelivery</a>.
        </p> <p>Don't use this operation to update the tags of a project.
        Instead, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html">TagResource</a>.
        </p>
  /segments/{segment}:
    GET:
      summary: GetSegment
      description: >-
        <p>Returns information about the specified segment. Specify the segment
        you want to view by specifying its ARN.</p>
  /projects/{project}/evaluations/{feature}:
    POST:
      summary: EvaluateFeature
      description: >-
        <p>This operation assigns a feature variation to one given user session.
        You pass in an <code>entityID</code> that represents the user. Evidently
        then checks the evaluation rules and assigns the variation.</p> <p>The
        first rules that are evaluated are the override rules. If the user's
        <code>entityID</code> matches an override rule, the user is served the
        variation specified by that rule.</p> <p>If there is a current launch
        with this feature that uses segment overrides, and if the user session's
        <code>evaluationContext</code> matches a segment rule defined in a
        segment override, the configuration in the segment overrides is used.
        For more information about segments, see <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html">CreateSegment</a>
        and <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Use
        segments to focus your audience</a>.</p> <p>If there is a launch with no
        segment overrides, the user might be assigned to a variation in the
        launch. The chance of this depends on the percentage of users that are
        allocated to that launch. If the user is enrolled in the launch, the
        variation they are served depends on the allocation of the various
        feature variations used for the launch.</p> <p>If the user is not
        assigned to a launch, and there is an ongoing experiment for this
        feature, the user might be assigned to a variation in the experiment.
        The chance of this depends on the percentage of users that are allocated
        to that experiment.</p> <p>If the experiment uses a segment, then only
        user sessions with <code>evaluationContext</code> values that match the
        segment rule are used in the experiment.</p> <p>If the user is enrolled
        in the experiment, the variation they are served depends on the
        allocation of the various feature variations used for the experiment.
        </p> <p>If the user is not assigned to a launch or experiment, they are
        served the default variation.</p>
  /projects/{project}/experiments/{experiment}/results:
    POST:
      summary: GetExperimentResults
      description: >-
        <p>Retrieves the results of a running or completed experiment. No
        results are available until there have been 100 events for each
        variation and at least 10 minutes have passed since the start of the
        experiment. To increase the statistical power, Evidently performs an
        additional offline p-value analysis at the end of the experiment.
        Offline p-value analysis can detect statistical significance in some
        cases where the anytime p-values used during the experiment do not find
        statistical significance.</p> <p>Experiment results are available up to
        63 days after the start of the experiment. They are not available after
        that because of CloudWatch data retention policies.</p>
  /segments/{segment}/references:
    GET:
      summary: ListSegmentReferences
      description: >-
        <p>Use this operation to find which experiments or launches are using a
        specified segment.</p>
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: <p>Removes one or more tags from the specified resource.</p>
  /events/projects/{project}:
    POST:
      summary: PutProjectEvents
      description: >-
        <p>Sends performance events to Evidently. These events can be used to
        evaluate a launch or an experiment.</p>
  /projects/{project}/experiments/{experiment}/start:
    POST:
      summary: StartExperiment
      description: >-
        <p>Starts an existing experiment. To create an experiment, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateExperiment.html">CreateExperiment</a>.</p>
  /projects/{project}/launches/{launch}/start:
    POST:
      summary: StartLaunch
      description: >-
        <p>Starts an existing launch. To create a launch, use <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateLaunch.html">CreateLaunch</a>.</p>
  /projects/{project}/experiments/{experiment}/cancel:
    POST:
      summary: StopExperiment
      description: >-
        <p>Stops an experiment that is currently running. If you stop an
        experiment, you can't resume it or restart it.</p>
  /projects/{project}/launches/{launch}/cancel:
    POST:
      summary: StopLaunch
      description: >-
        <p>Stops a launch that is currently running. After you stop a launch,
        you will not be able to resume it or restart it. Also, it will not be
        evaluated as a rule for traffic allocation, and the traffic that was
        allocated to the launch will instead be available to the feature's
        experiment, if there is one. Otherwise, all traffic will be served the
        default variation after the launch is stopped.</p>
  /test-segment-pattern:
    POST:
      summary: TestSegmentPattern
      description: >-
        <p>Use this operation to test a rules pattern that you plan to use to
        create an audience segment. For more information about segments, see <a
        href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html">CreateSegment</a>.</p>
  /projects/{project}/data-delivery:
    PATCH:
      summary: UpdateProjectDataDelivery
      description: >-
        <p>Updates the data storage options for this project. If you store
        evaluation events, you an keep them and analyze them on your own. If you
        choose not to store evaluation events, Evidently deletes them after
        using them to produce metrics and other experiment results that you can
        view.</p> <p>You can't specify both <code>cloudWatchLogs</code> and
        <code>s3Destination</code> in the same operation.</p>
tags: []
