openapi: 3.1.0
info:
  title: iotanalytics
  description: >-
    <p>IoT Analytics allows you to collect large amounts of device data, process
    messages, and store them. You can then query the data and run sophisticated
    analytics on it. IoT Analytics enables advanced data exploration through
    integration with Jupyter Notebooks and data visualization through
    integration with Amazon QuickSight.</p> <p>Traditional analytics and
    business intelligence tools are designed to process structured data. IoT
    data often comes from devices that record noisy processes (such as
    temperature, motion, or sound). As a result the data from these devices can
    have significant gaps, corrupted messages, and false readings that must be
    cleaned up before analysis can occur. Also, IoT data is often only
    meaningful in the context of other data from external sources. </p> <p>IoT
    Analytics automates the steps required to analyze data from IoT devices. IoT
    Analytics filters, transforms, and enriches IoT data before storing it in a
    time-series data store for analysis. You can set up the service to collect
    only the data you need from your devices, apply mathematical transforms to
    process the data, and enrich the data with device-specific metadata such as
    device type and location before storing it. Then, you can analyze your data
    by running queries using the built-in SQL query engine, or perform more
    complex analytics and machine learning inference. IoT Analytics includes
    pre-built models for common IoT use cases so you can answer questions like
    which devices are about to fail or which customers are at risk of abandoning
    their wearable devices.</p>
paths:
  /messages/batch:
    POST:
      summary: BatchPutMessage
      description: <p>Sends messages to a channel.</p>
  /pipelines/{pipelineName}/reprocessing/{reprocessingId}:
    DELETE:
      summary: CancelPipelineReprocessing
      description: <p>Cancels the reprocessing of data through the pipeline.</p>
  /channels:
    GET:
      summary: ListChannels
      description: <p>Retrieves a list of channels.</p>
  /datasets:
    GET:
      summary: ListDatasets
      description: <p>Retrieves information about datasets.</p>
  /datasets/{datasetName}/content:
    GET:
      summary: GetDatasetContent
      description: <p>Retrieves the contents of a dataset as presigned URIs.</p>
  /datastores:
    GET:
      summary: ListDatastores
      description: <p>Retrieves a list of data stores.</p>
  /pipelines:
    GET:
      summary: ListPipelines
      description: <p>Retrieves a list of pipelines.</p>
  /channels/{channelName}:
    PUT:
      summary: UpdateChannel
      description: <p>Used to update the settings of a channel.</p>
  /datasets/{datasetName}:
    PUT:
      summary: UpdateDataset
      description: <p>Updates the settings of a dataset.</p>
  /datastores/{datastoreName}:
    PUT:
      summary: UpdateDatastore
      description: <p>Used to update the settings of a data store.</p>
  /pipelines/{pipelineName}:
    PUT:
      summary: UpdatePipeline
      description: >-
        <p>Updates the settings of a pipeline. You must specify both a
        <code>channel</code> and a <code>datastore</code> activity and,
        optionally, as many as 23 additional activities in the
        <code>pipelineActivities</code> array.</p>
  /logging:
    PUT:
      summary: PutLoggingOptions
      description: >-
        <p>Sets or updates the IoT Analytics logging options.</p> <p>If you
        update the value of any <code>loggingOptions</code> field, it takes up
        to one minute for the change to take effect. Also, if you change the
        policy attached to the role you specified in the <code>roleArn</code>
        field (for example, to correct an invalid policy), it takes up to five
        minutes for that change to take effect. </p>
  /datasets/{datasetName}/contents:
    GET:
      summary: ListDatasetContents
      description: <p>Lists information about dataset contents that have been created.</p>
  /tags:
    DELETE:
      summary: UntagResource
      description: <p>Removes the given tags (metadata) from the resource.</p>
  /pipelineactivities/run:
    POST:
      summary: RunPipelineActivity
      description: >-
        <p>Simulates the results of running a pipeline activity on a message
        payload.</p>
  /channels/{channelName}/sample:
    GET:
      summary: SampleChannelData
      description: >-
        <p>Retrieves a sample of messages from the specified channel ingested
        during the specified timeframe. Up to 10 messages can be retrieved.</p>
  /pipelines/{pipelineName}/reprocessing:
    POST:
      summary: StartPipelineReprocessing
      description: <p>Starts the reprocessing of raw message data through the pipeline.</p>
tags: []
