openapi: 3.1.0
info:
  title: tnb
  description: >-
    <p> Amazon Web Services Telco Network Builder (TNB) is a network automation
    service that helps you deploy and manage telecom networks. AWS TNB helps you
    with the lifecycle management of your telecommunication network functions
    throughout planning, deployment, and post-deployment activities.</p>
paths:
  /sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}/cancel:
    POST:
      summary: CancelSolNetworkOperation
      description: >-
        <p>Cancels a network operation.</p> <p>A network operation is any
        operation that is done to your network, such as network instance
        instantiation or termination.</p>
  /sol/vnfpkgm/v1/vnf_packages:
    GET:
      summary: ListSolFunctionPackages
      description: >-
        <p>Lists information about function packages.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a
        network function (an ETSI standard telecommunication application) and
        function package descriptor that uses the TOSCA standard to describe how
        the network functions should run on your network.</p>
  /sol/nslcm/v1/ns_instances:
    GET:
      summary: ListSolNetworkInstances
      description: >-
        <p>Lists your network instances.</p> <p>A network instance is a single
        network created in Amazon Web Services TNB that can be deployed and on
        which life-cycle operations (like terminate, update, and delete) can be
        performed.</p>
  /sol/nsd/v1/ns_descriptors:
    GET:
      summary: ListSolNetworkPackages
      description: >-
        <p>Lists network packages.</p> <p>A network package is a .zip file in
        CSAR (Cloud Service Archive) format defines the function packages you
        want to deploy and the Amazon Web Services infrastructure you want to
        deploy them on.</p>
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}:
    PATCH:
      summary: UpdateSolFunctionPackage
      description: >-
        <p>Updates the operational state of function package.</p> <p>A function
        package is a .zip file in CSAR (Cloud Service Archive) format that
        contains a network function (an ETSI standard telecommunication
        application) and function package descriptor that uses the TOSCA
        standard to describe how the network functions should run on your
        network.</p>
  /sol/nslcm/v1/ns_instances/{nsInstanceId}:
    GET:
      summary: GetSolNetworkInstance
      description: >-
        <p>Gets the details of the network instance.</p> <p>A network instance
        is a single network created in Amazon Web Services TNB that can be
        deployed and on which life-cycle operations (like terminate, update, and
        delete) can be performed.</p>
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}:
    PATCH:
      summary: UpdateSolNetworkPackage
      description: >-
        <p>Updates the operational state of a network package.</p> <p>A network
        package is a .zip file in CSAR (Cloud Service Archive) format defines
        the function packages you want to deploy and the Amazon Web Services
        infrastructure you want to deploy them on.</p> <p>A network service
        descriptor is a .yaml file in a network package that uses the TOSCA
        standard to describe the network functions you want to deploy and the
        Amazon Web Services infrastructure you want to deploy the network
        functions on.</p>
  /sol/vnflcm/v1/vnf_instances/{vnfInstanceId}:
    GET:
      summary: GetSolFunctionInstance
      description: >-
        <p>Gets the details of a network function instance, including the
        instantation state and metadata from the function package descriptor in
        the network function package.</p> <p>A network function instance is a
        function in a function package .</p>
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content:
    PUT:
      summary: PutSolFunctionPackageContent
      description: >-
        <p>Uploads the contents of a function package.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a
        network function (an ETSI standard telecommunication application) and
        function package descriptor that uses the TOSCA standard to describe how
        the network functions should run on your network.</p>
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/vnfd:
    GET:
      summary: GetSolFunctionPackageDescriptor
      description: >-
        <p>Gets a function package descriptor in a function package.</p> <p>A
        function package descriptor is a .yaml file in a function package that
        uses the TOSCA standard to describe how the network function in the
        function package should run on your network.</p> <p>A function package
        is a .zip file in CSAR (Cloud Service Archive) format that contains a
        network function (an ETSI standard telecommunication application) and
        function package descriptor that uses the TOSCA standard to describe how
        the network functions should run on your network.</p>
  /sol/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}:
    GET:
      summary: GetSolNetworkOperation
      description: >-
        <p>Gets the details of a network operation, including the tasks involved
        in the network operation and the status of the tasks.</p> <p>A network
        operation is any operation that is done to your network, such as network
        instance instantiation or termination.</p>
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content:
    PUT:
      summary: PutSolNetworkPackageContent
      description: >-
        <p>Uploads the contents of a network package.</p> <p>A network package
        is a .zip file in CSAR (Cloud Service Archive) format defines the
        function packages you want to deploy and the Amazon Web Services
        infrastructure you want to deploy them on.</p>
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd:
    GET:
      summary: GetSolNetworkPackageDescriptor
      description: >-
        <p>Gets the content of the network service descriptor.</p> <p>A network
        service descriptor is a .yaml file in a network package that uses the
        TOSCA standard to describe the network functions you want to deploy and
        the Amazon Web Services infrastructure you want to deploy the network
        functions on.</p>
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/instantiate:
    POST:
      summary: InstantiateSolNetworkInstance
      description: >-
        <p>Instantiates a network instance.</p> <p>A network instance is a
        single network created in Amazon Web Services TNB that can be deployed
        and on which life-cycle operations (like terminate, update, and delete)
        can be performed.</p> <p>Before you can instantiate a network instance,
        you have to create a network instance. For more information, see <a
        href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_CreateSolNetworkInstance.html">CreateSolNetworkInstance</a>.</p>
  /sol/vnflcm/v1/vnf_instances:
    GET:
      summary: ListSolFunctionInstances
      description: >-
        <p>Lists network function instances.</p> <p>A network function instance
        is a function in a function package .</p>
  /sol/nslcm/v1/ns_lcm_op_occs:
    GET:
      summary: ListSolNetworkOperations
      description: >-
        <p>Lists details for a network operation, including when the operation
        started and the status of the operation.</p> <p>A network operation is
        any operation that is done to your network, such as network instance
        instantiation or termination.</p>
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: >-
        <p>Untags an AWS TNB resource.</p> <p>A tag is a label that you assign
        to an Amazon Web Services resource. Each tag consists of a key and an
        optional value. You can use tags to search and filter your resources or
        track your Amazon Web Services costs.</p>
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/terminate:
    POST:
      summary: TerminateSolNetworkInstance
      description: >-
        <p>Terminates a network instance.</p> <p>A network instance is a single
        network created in Amazon Web Services TNB that can be deployed and on
        which life-cycle operations (like terminate, update, and delete) can be
        performed.</p> <p>You must terminate a network instance before you can
        delete it.</p>
  /sol/nslcm/v1/ns_instances/{nsInstanceId}/update:
    POST:
      summary: UpdateSolNetworkInstance
      description: >-
        <p>Update a network instance.</p> <p>A network instance is a single
        network created in Amazon Web Services TNB that can be deployed and on
        which life-cycle operations (like terminate, update, and delete) can be
        performed.</p>
  /sol/vnfpkgm/v1/vnf_packages/{vnfPkgId}/package_content/validate:
    PUT:
      summary: ValidateSolFunctionPackageContent
      description: >-
        <p>Validates function package content. This can be used as a dry run
        before uploading function package content with <a
        href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolFunctionPackageContent.html">PutSolFunctionPackageContent</a>.</p>
        <p>A function package is a .zip file in CSAR (Cloud Service Archive)
        format that contains a network function (an ETSI standard
        telecommunication application) and function package descriptor that uses
        the TOSCA standard to describe how the network functions should run on
        your network.</p>
  /sol/nsd/v1/ns_descriptors/{nsdInfoId}/nsd_content/validate:
    PUT:
      summary: ValidateSolNetworkPackageContent
      description: >-
        <p>Validates network package content. This can be used as a dry run
        before uploading network package content with <a
        href="https://docs.aws.amazon.com/tnb/latest/APIReference/API_PutSolNetworkPackageContent.html">PutSolNetworkPackageContent</a>.</p>
        <p>A network package is a .zip file in CSAR (Cloud Service Archive)
        format defines the function packages you want to deploy and the Amazon
        Web Services infrastructure you want to deploy them on.</p>
tags: []
