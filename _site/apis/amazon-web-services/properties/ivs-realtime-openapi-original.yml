openapi: 3.1.0
info:
  title: ivs-realtime
  description: >-
    <p> <b>Introduction</b> </p> <p>The Amazon Interactive Video Service (IVS)
    real-time API is REST compatible, using a standard HTTP API and an AWS
    EventBridge event stream for responses. JSON is used for both requests and
    responses, including errors. </p> <p>Terminology:</p> <ul> <li> <p>A
    <i>stage</i> is a virtual space where participants can exchange video in
    real time.</p> </li> <li> <p>A <i>participant token</i> is a token that
    authenticates a participant when they join a stage.</p> </li> <li> <p>A
    <i>participant object</i> represents participants (people) in the stage and
    contains information about them. When a token is created, it includes a
    participant ID; when a participant uses that token to join a stage, the
    participant is associated with that participant ID. There is a 1:1 mapping
    between participant tokens and participants.</p> </li> <li> <p>Server-side
    composition: The <i>composition</i> process composites participants of a
    stage into a single video and forwards it to a set of outputs (e.g., IVS
    channels). Composition endpoints support this process.</p> </li> <li>
    <p>Server-side composition: A <i>composition</i> controls the look of the
    outputs, including how participants are positioned in the video.</p> </li>
    </ul> <p> <b>Resources</b> </p> <p>The following resources contain
    information about your IVS live stream (see <a
    href="https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started.html">Getting
    Started with Amazon IVS Real-Time Streaming</a>):</p> <ul> <li> <p>
    <b>Stage</b> — A stage is a virtual space where participants can exchange
    video in real time.</p> </li> </ul> <p> <b>Tagging</b> </p> <p>A <i>tag</i>
    is a metadata label that you assign to an AWS resource. A tag comprises a
    <i>key</i> and a <i>value</i>, both set by you. For example, you might set a
    tag as <code>topic:nature</code> to label a particular video category. See
    <a
    href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
    AWS Resources</a> for more information, including restrictions that apply to
    tags and "Tag naming limits and requirements"; Amazon IVS stages has no
    service-specific constraints beyond what is documented there.</p> <p>Tags
    can help you identify and organize your AWS resources. For example, you can
    use the same tag for different resources to indicate that they are related.
    You can also use tags to manage access (see <a
    href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Access
    Tags</a>).</p> <p>The Amazon IVS real-time API has these tag-related
    endpoints: <a>TagResource</a>, <a>UntagResource</a>, and
    <a>ListTagsForResource</a>. The following resource supports tagging:
    Stage.</p> <p>At most 50 tags can be applied to a resource.</p> <p>
    <b>Stages Endpoints</b> </p> <ul> <li> <p> <a>CreateParticipantToken</a> —
    Creates an additional token for a specified stage. This can be done after
    stage creation or when tokens expire.</p> </li> <li> <p> <a>CreateStage</a>
    — Creates a new stage (and optionally participant tokens).</p> </li> <li>
    <p> <a>DeleteStage</a> — Shuts down and deletes the specified stage
    (disconnecting all participants).</p> </li> <li> <p>
    <a>DisconnectParticipant</a> — Disconnects a specified participant and
    revokes the participant permanently from a specified stage.</p> </li> <li>
    <p> <a>GetParticipant</a> — Gets information about the specified participant
    token.</p> </li> <li> <p> <a>GetStage</a> — Gets information for the
    specified stage.</p> </li> <li> <p> <a>GetStageSession</a> — Gets
    information for the specified stage session.</p> </li> <li> <p>
    <a>ListParticipantEvents</a> — Lists events for a specified participant that
    occurred during a specified stage session.</p> </li> <li> <p>
    <a>ListParticipants</a> — Lists all participants in a specified stage
    session.</p> </li> <li> <p> <a>ListStages</a> — Gets summary information
    about all stages in your account, in the AWS region where the API request is
    processed.</p> </li> <li> <p> <a>ListStageSessions</a> — Gets all sessions
    for a specified stage.</p> </li> <li> <p> <a>UpdateStage</a> — Updates a
    stage’s configuration.</p> </li> </ul> <p> <b>Composition Endpoints</b> </p>
    <ul> <li> <p> <a>GetComposition</a> — Gets information about the specified
    Composition resource.</p> </li> <li> <p> <a>ListCompositions</a> — Gets
    summary information about all Compositions in your account, in the AWS
    region where the API request is processed.</p> </li> <li> <p>
    <a>StartComposition</a> — Starts a Composition from a stage based on the
    configuration provided in the request.</p> </li> <li> <p>
    <a>StopComposition</a> — Stops and deletes a Composition resource. Any
    broadcast from the Composition resource is stopped.</p> </li> </ul> <p>
    <b>EncoderConfiguration Endpoints</b> </p> <ul> <li> <p>
    <a>CreateEncoderConfiguration</a> — Creates an EncoderConfiguration
    object.</p> </li> <li> <p> <a>DeleteEncoderConfiguration</a> — Deletes an
    EncoderConfiguration resource. Ensures that no Compositions are using this
    template; otherwise, returns an error.</p> </li> <li> <p>
    <a>GetEncoderConfiguration</a> — Gets information about the specified
    EncoderConfiguration resource.</p> </li> <li> <p>
    <a>ListEncoderConfigurations</a> — Gets summary information about all
    EncoderConfigurations in your account, in the AWS region where the API
    request is processed.</p> </li> </ul> <p> <b>StorageConfiguration
    Endpoints</b> </p> <ul> <li> <p> <a>CreateStorageConfiguration</a> — Creates
    a new storage configuration, used to enable recording to Amazon S3.</p>
    </li> <li> <p> <a>DeleteStorageConfiguration</a> — Deletes the storage
    configuration for the specified ARN.</p> </li> <li> <p>
    <a>GetStorageConfiguration</a> — Gets the storage configuration for the
    specified ARN.</p> </li> <li> <p> <a>ListStorageConfigurations</a> — Gets
    summary information about all storage configurations in your account, in the
    AWS region where the API request is processed.</p> </li> </ul> <p> <b>Tags
    Endpoints</b> </p> <ul> <li> <p> <a>ListTagsForResource</a> — Gets
    information about AWS tags for the specified ARN.</p> </li> <li> <p>
    <a>TagResource</a> — Adds or updates tags for the AWS resource with the
    specified ARN.</p> </li> <li> <p> <a>UntagResource</a> — Removes tags from
    the resource with the specified ARN.</p> </li> </ul>
paths:
  /CreateEncoderConfiguration:
    POST:
      summary: CreateEncoderConfiguration
      description: <p>Creates an EncoderConfiguration object.</p>
  /CreateParticipantToken:
    POST:
      summary: CreateParticipantToken
      description: >-
        <p>Creates an additional token for a specified stage. This can be done
        after stage creation or when tokens expire. Tokens always are scoped to
        the stage for which they are created.</p> <p>Encryption keys are owned
        by Amazon IVS and never used directly by your application.</p>
  /CreateStage:
    POST:
      summary: CreateStage
      description: <p>Creates a new stage (and optionally participant tokens).</p>
  /CreateStorageConfiguration:
    POST:
      summary: CreateStorageConfiguration
      description: >-
        <p>Creates a new storage configuration, used to enable recording to
        Amazon S3. When a StorageConfiguration is created, IVS will modify the
        S3 bucketPolicy of the provided bucket. This will ensure that IVS has
        sufficient permissions to write content to the provided bucket.</p>
  /DeleteEncoderConfiguration:
    POST:
      summary: DeleteEncoderConfiguration
      description: >-
        <p>Deletes an EncoderConfiguration resource. Ensures that no
        Compositions are using this template; otherwise, returns an error.</p>
  /DeleteStage:
    POST:
      summary: DeleteStage
      description: >-
        <p>Shuts down and deletes the specified stage (disconnecting all
        participants).</p>
  /DeleteStorageConfiguration:
    POST:
      summary: DeleteStorageConfiguration
      description: >-
        <p>Deletes the storage configuration for the specified ARN.</p> <p>If
        you try to delete a storage configuration that is used by a Composition,
        you will get an error (409 ConflictException). To avoid this, for all
        Compositions that reference the storage configuration, first use
        <a>StopComposition</a> and wait for it to complete, then use
        DeleteStorageConfiguration.</p>
  /DisconnectParticipant:
    POST:
      summary: DisconnectParticipant
      description: >-
        <p>Disconnects a specified participant and revokes the participant
        permanently from a specified stage.</p>
  /GetComposition:
    POST:
      summary: GetComposition
      description: <p>Get information about the specified Composition resource.</p>
  /GetEncoderConfiguration:
    POST:
      summary: GetEncoderConfiguration
      description: >-
        <p>Gets information about the specified EncoderConfiguration resource.
        </p>
  /GetParticipant:
    POST:
      summary: GetParticipant
      description: <p>Gets information about the specified participant token.</p>
  /GetStage:
    POST:
      summary: GetStage
      description: <p>Gets information for the specified stage.</p>
  /GetStageSession:
    POST:
      summary: GetStageSession
      description: <p>Gets information for the specified stage session.</p>
  /GetStorageConfiguration:
    POST:
      summary: GetStorageConfiguration
      description: <p>Gets the storage configuration for the specified ARN.</p>
  /ListCompositions:
    POST:
      summary: ListCompositions
      description: >-
        <p>Gets summary information about all Compositions in your account, in
        the AWS region where the API request is processed. </p>
  /ListEncoderConfigurations:
    POST:
      summary: ListEncoderConfigurations
      description: >-
        <p>Gets summary information about all EncoderConfigurations in your
        account, in the AWS region where the API request is processed.</p>
  /ListParticipantEvents:
    POST:
      summary: ListParticipantEvents
      description: >-
        <p>Lists events for a specified participant that occurred during a
        specified stage session.</p>
  /ListParticipants:
    POST:
      summary: ListParticipants
      description: <p>Lists all participants in a specified stage session.</p>
  /ListStageSessions:
    POST:
      summary: ListStageSessions
      description: <p>Gets all sessions for a specified stage.</p>
  /ListStages:
    POST:
      summary: ListStages
      description: >-
        <p>Gets summary information about all stages in your account, in the AWS
        region where the API request is processed.</p>
  /ListStorageConfigurations:
    POST:
      summary: ListStorageConfigurations
      description: >-
        <p>Gets summary information about all storage configurations in your
        account, in the AWS region where the API request is processed.</p>
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: <p>Removes tags from the resource with the specified ARN.</p>
  /StartComposition:
    POST:
      summary: StartComposition
      description: >-
        <p>Starts a Composition from a stage based on the configuration provided
        in the request.</p> <p>A Composition is an ephemeral resource that
        exists after this endpoint returns successfully. Composition stops and
        the resource is deleted:</p> <ul> <li> <p>When <a>StopComposition</a> is
        called.</p> </li> <li> <p>After a 1-minute timeout, when all
        participants are disconnected from the stage.</p> </li> <li> <p>After a
        1-minute timeout, if there are no participants in the stage when
        StartComposition is called.</p> </li> <li> <p>When broadcasting to the
        IVS channel fails and all retries are exhausted.</p> </li> <li> <p>When
        broadcasting is disconnected and all attempts to reconnect are
        exhausted.</p> </li> </ul>
  /StopComposition:
    POST:
      summary: StopComposition
      description: >-
        <p>Stops and deletes a Composition resource. Any broadcast from the
        Composition resource is stopped.</p>
  /UpdateStage:
    POST:
      summary: UpdateStage
      description: <p>Updates a stage’s configuration.</p>
tags: []
