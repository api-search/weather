openapi: 3.1.0
info:
  title: serverlessrepo
  description: >-
    <p>The AWS Serverless Application Repository makes it easy for developers
    and enterprises to quickly find
     and deploy serverless applications in the AWS Cloud. For more information about serverless applications,
     see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of 
     all levels can get started with serverless computing without needing to learn anything new. You can use category 
     keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots. 
     You can also search for applications by name, publisher, or event source. To use an application, you simply choose it, 
     configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately
     within your team or across your organization. To publish a serverless application (or app), you can use the
     AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the
     code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.
     For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs
     GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer
     experiences available:</p><ul>
     <li>
     <p>Consuming Applications – Browse for applications and view information about them, including
     source code and readme files. Also install, configure, and deploy applications of your choosing. </p>
     <p>Publishing Applications – Configure and upload applications to make them available to other
     developers, and publish new versions of applications. </p>
     </li>
     </ul>
paths:
  /applications:
    GET:
      summary: ListApplications
      description: <p>Lists applications owned by the requester.</p>
  /applications/{applicationId}/versions/{semanticVersion}:
    PUT:
      summary: CreateApplicationVersion
      description: <p>Creates an application version.</p>
  /applications/{applicationId}/changesets:
    POST:
      summary: CreateCloudFormationChangeSet
      description: >-
        <p>Creates an AWS CloudFormation change set for the given
        application.</p>
  /applications/{applicationId}/templates:
    POST:
      summary: CreateCloudFormationTemplate
      description: <p>Creates an AWS CloudFormation template.</p>
  /applications/{applicationId}:
    PATCH:
      summary: UpdateApplication
      description: <p>Updates the specified application.</p>
  /applications/{applicationId}/policy:
    PUT:
      summary: PutApplicationPolicy
      description: >-
        <p>Sets the permission policy for an application. For the list of
        actions supported for this operation, see
         <a href="https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions">Application 
         Permissions</a>
         .</p>
  /applications/{applicationId}/templates/{templateId}:
    GET:
      summary: GetCloudFormationTemplate
      description: <p>Gets the specified AWS CloudFormation template.</p>
  /applications/{applicationId}/dependencies:
    GET:
      summary: ListApplicationDependencies
      description: >-
        <p>Retrieves the list of applications nested in the containing
        application.</p>
  /applications/{applicationId}/versions:
    GET:
      summary: ListApplicationVersions
      description: <p>Lists versions for the specified application.</p>
  /applications/{applicationId}/unshare:
    POST:
      summary: UnshareApplication
      description: >-
        <p>Unshares an application from an AWS Organization.</p><p>This
        operation can be called only from the organization's master account.</p>
tags: []
